# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  check:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk
      
      # Specify service dependencies here if necessary
      # CircleCI maintains a library of pre-built images
      # documented at https://circleci.com/docs/2.0/circleci-images/
      # - image: circleci/postgres:9.4

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb
    
    steps:
      - checkout
      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      - run: ./gradlew downloadDependencies

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper/dists
          key: v1-dependencies-{{ checksum "build.gradle" }}
        
      # build
      - run: ./gradlew check

      - store_test_results:
          path: build/test-results

      - persist_to_workspace:
          root: .
          paths: build

  build:
    docker:
      # specify the version you desire here
      - image: circleci/openjdk:8-jdk

    working_directory: ~/repo

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      TERM: dumb

    steps:
      - checkout
      - attach_workspace:
          at: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v1-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v1-dependencies-

      # build
      - run: ./gradlew build

      - persist_to_workspace:
          root: .
          paths: build

  deploy:
    working_directory: ~/repo
    docker:
      - image: circleci/openjdk:8-jdk
    steps:
      - attach_workspace:
          at: ~/repo
      - run: ls ~/repo/build/

workflows:
  version: 2
  check-build-and-deploy:
    jobs:
      - check
      - build:
          requires:
            - check
      - hold:
          type: approval
          requires:
            - build
      - deploy:
          requires:
            - hold
