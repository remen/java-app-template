# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
defaults: &defaults
  working_directory: ~/repo
  docker:
    - image: circleci/openjdk:8-jdk
  environment:
    # Customize the JVM maximum heap limit
    JVM_OPTS: -Xmx3200m
    TERM: dumb

jobs:
  check:
    <<: *defaults
    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - run: ./gradlew downloadDependencies

      - save_cache:
          paths:
            - ~/.gradle/caches
            - ~/.gradle/wrapper/dists
          key: v2-dependencies-{{ checksum "build.gradle" }}
        
      # build
      - run: ./gradlew check

      - store_test_results:
          path: build/test-results

      - persist_to_workspace:
          root: .
          paths: .

  build:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo

      # Download and cache dependencies
      - restore_cache:
          keys:
          - v2-dependencies-{{ checksum "build.gradle" }}
          # fallback to using the latest cache if no exact match is found
          - v2-dependencies-

      - setup_remote_docker   # (2)
      - run:
          name: "Login to docker hub"
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS

      # use a primary image that already has Docker (recommended)
      # or install it during a build like we do here
#      - run:
#          name: Install Docker client
#          command: |
#            set -x
#            VER="17.03.0-ce"
#            curl -L -o /tmp/docker-$VER.tgz https://get.docker.com/builds/Linux/x86_64/docker-$VER.tgz
#            tar -xz -C /tmp -f /tmp/docker-$VER.tgz
#            mv /tmp/docker/* /usr/bin

      # build
      - run: ./gradlew pushDockerImage
#      - persist_to_workspace:
#          root: .
#          paths: .
#
  deploy:
    <<: *defaults
    steps:
      - attach_workspace:
          at: ~/repo
      - run: ls ~/repo/build/

workflows:
  version: 2
  check-build-and-deploy:
    jobs:
      - check
      - build:
          filters:
            branches:
              only:
                - master
          requires:
            - check
#      - hold:
#          type: approval
#          requires:
#            - build
#      - deploy:
#          requires:
#            - hold
